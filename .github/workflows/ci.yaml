jobs:
  build:
    "runs-on": "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - id: "setup-haskell-cabal"
      uses: "haskell/actions/setup@v2"
      with:
        "cabal-version": "${{ matrix.cabal }}"
        "enable-stack": false
        "ghc-version": "${{ matrix.ghc }}"
    - uses: cachix/install-nix-action@v17
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - name: Update Hackage repository
      run: cabal update
    - name: cabal.project.local.ci
      run: |
        if [ -e cabal.project.local.ci ]; then
          cp cabal.project.local.ci cabal.project.local
        fi
    - name: freeze
      run: cabal freeze
    - uses: "actions/cache@v3"
      with:
        key: "${{ runner.os }}-${{ matrix.ghc }}-cabal-${{ hashFiles('cabal.project.freeze') }}"
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
    - name: Install dependencies
      run: "cabal build all --enable-tests --enable-benchmarks --only-dependencies"
    - name: build all
      run: "cabal build all --enable-tests --enable-benchmarks"
    - name: test all
      run: "cabal test all --enable-tests"
    strategy:
      matrix:
        cabal:
        - '3.4'
        ghc:
        - '9.4.4'
        - '9.2.5'
        - '9.0.2'
        - '8.10.7'
  build-nix:
    "runs-on": "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: cachix/install-nix-action@v17
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - name: check it build with nix
      run: nix build
name: Haskell CI
'on':
- pull_request
